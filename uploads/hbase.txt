import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.HColumnDescriptor;
import org.apache.hadoop.hbase.HTableDescriptor;
import org.apache.hadoop.hbase.TableName;
import org.apache.hadoop.hbase.client.*;

import java.io.IOException;

public class c1   {

    public static void main(String[] args) throws IOException {
// these two lines of code are boilerplate that is required to set up a connection to Hbase
        Configuration conf = HBaseConfiguration.create(); //STEP-2 WE NEED BOILERPLATE TO CONNECT TO HBASE AND CREATE TABLE
//We need to specify the configuration of Hbase installation.
        Connection connection = ConnectionFactory.createConnection(conf); //REPRESENTS CONNECTION TO HBASE

        Admin admin = connection.getAdmin();

        HTableDescriptor tableName = new HTableDescriptor(TableName.valueOf("dummytable")); //STEP-1 SPECIFYING TABLE NAME AND COLUMN PROPERTIES
// We need to get a new object of the table descriptor class and the constructor takes in a string which will be used to set the table name.

        tableName.addFamily(new HColumnDescriptor("c1")); //SPECIFY COLUMN FAMILIES WITH HCOLUMNDESCRIPTOR
        tableName.addFamily(new HColumnDescriptor("c2")); //ADDFAMILY METHOD WILL ADD THE COLUMN FAMILY TO TABLE PROPERTIES


        if (!admin.tableExists(tableName.getTableName())) {
            System.out.print("table info");
            admin.createTable(tableName);
            System.out.println(".");
        }
    }